first: all

include ../Makefile.include

include ../zlib/Makefile.include
include ../libgcrypt/Makefile.include
include ../libgpg-error/Makefile.include

include Makefile.include

PRODUCT_NAME = libssh
PRODUCT_VERSION = 0.8.7
PRODUCT_DIRNAME = $(PRODUCT_NAME)-$(PRODUCT_VERSION)
PRODUCT_PORT_SUFFIX = $(TARGET_MACHINE)

PRODUCT_ARCHIVE = $(PRODUCT_NAME)-$(PRODUCT_VERSION).tar.xz
PRODUCT_ARCHIVE_URL = https://www.libssh.org/files/0.8/$(PRODUCT_ARCHIVE)
PRODUCT_ARCHIVE_DIR = $(ARCHIVE_DIR)
PRODUCT_ARCHIVE_PATH = $(PRODUCT_ARCHIVE_DIR)/$(PRODUCT_ARCHIVE)

PRODUCT_SOURCE_DIR = $(SOURCE_DIR)/$(PRODUCT_DIRNAME)

PRODUCT_PORT_DIR = $(PORT_DIR)/$(PRODUCT_DIRNAME)-$(PRODUCT_PORT_SUFFIX)

PRODUCT_BUILD_DIR = $(BUILD_DIR)/$(PRODUCT_DIRNAME)-$(PRODUCT_PORT_SUFFIX)

PRODUCT_INSTALL_DIR = $(LIBSSH_INSTALL_DIR)
PRODUCT_INSTALL_INCLUDE_DIR = $(PRODUCT_INSTALL_DIR)/include/libssh
PRODUCT_INSTALL_LIB_DIR = $(PRODUCT_INSTALL_DIR)/bin

PRODUCT_DEPLOY_DIR = $(LIBSSH_DEPLOY_DIR)
PRODUCT_DEPLOY_INCLUDE_DIR = $(PRODUCT_DEPLOY_DIR)/include/libssh
PRODUCT_DEPLOY_LIB_DIR = $(PRODUCT_DEPLOY_DIR)/lib

PRODUCT_CONFIGURE_TXT_PATH = $(BUILD_DIR)/$(PRODUCT_NAME)-$(PRODUCT_VERSION)-$(PRODUCT_PORT_SUFFIX).cmake.txt 
PRODUCT_README_PORT_MD_PATH = $(PRODUCT_PORT_DIR)/README.$(PRODUCT_PORT_SUFFIX).md
PRODUCT_BUILD_TXT_PATH = $(BUILD_DIR)/$(PRODUCT_NAME)-$(PRODUCT_VERSION)-$(PRODUCT_PORT_SUFFIX).build.txt

PRODUCT_INCLUDE_FILES = callbacks.h  legacy.h  libssh.h  libsshpp.hpp  server.h  sftp.h  ssh2.h
PRODUCT_INCLUDE_FILES_INSTALL = $(addprefix $(PRODUCT_INSTALL_INCLUDE_DIR)/, $(PRODUCT_INCLUDE_FILES))
PRODUCT_INCLUDE_FILES_DEPLOY = $(addprefix $(PRODUCT_DEPLOY_INCLUDE_DIR)/, $(PRODUCT_INCLUDE_FILES))

PRODUCT_LIB_FILES = libssh.dll libssh_threads.dll
PRODUCT_LIB_FILES_INSTALL = $(addprefix $(PRODUCT_INSTALL_LIB_DIR)/, $(PRODUCT_LIB_FILES))
PRODUCT_LIB_FILES_DEPLOY = $(addprefix $(PRODUCT_DEPLOY_LIB_DIR)/, $(PRODUCT_LIB_FILES))

export PATH MAKE

include ../Makefile.phony

all: deploy

include ../Makefile.deploy

buildinstall $(PRODUCT_LIB_FILES_INSTALL) $(PRODUCT_INCLUDE_FILES_INSTALL): $(PRODUCT_BUILD_TXT_PATH) | $(CD) $(MAKE) $(TOUCH)
	$(CD) $(PRODUCT_BUILD_DIR) && $(MAKE) -j $(MAKE_BUILD_JOBS) install
	$(TOUCH) $(PRODUCT_INCLUDE_FILES_INSTALL)
	$(TOUCH) $(PRODUCT_LIB_FILES_INSTALL)

include ../Makefile.build

buildconfigure $(PRODUCT_BUILD_DIR)/Makefile: \
		$(ZLIB_INSTALL_DIR) \
		$(LIBGCRYPT_INSTALL_DIR) \
		$(LIBGPG-ERROR_INSTALL_DIR) | $(PRODUCT_BUILD_DIR) $(RM) $(CD) $(CMAKE) $(TEE)
	$(RM) -f $(PRODUCT_BUILD_DIR)/CMakeCache.txt
	$(CD) $(PRODUCT_BUILD_DIR) && $(CMAKE) $(PRODUCT_PORT_DIR) \
		-DZLIB_INCLUDE_DIR=$(ZLIB_INSTALL_DIR)/include -DZLIB_LIBRARY=$(ZLIB_INSTALL_DIR)/bin/zlib1.dll \
		-DWITH_GCRYPT=ON -DGCRYPT_INCLUDE_DIR=$(LIBGCRYPT_INSTALL_DIR)/include -DGCRYPT_LIBRARY=$(LIBGCRYPT_INSTALL_DIR)/bin/libgcrypt-20.dll \
		-DCMAKE_C_FLAGS=-isystem\ $(LIBGPG-ERROR_INSTALL_DIR)/include \
		-DWITH_DEBUG_CALLTRACE=OFF \
		-DCMAKE_INSTALL_PREFIX=$(LIBSSH_INSTALL_DIR) \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_VERBOSE_MAKEFILE=ON \
		-DTHREADSAFE=ON \
		-G "MSYS Makefiles" \
		2>&1 | $(TEE) $(PRODUCT_CONFIGURE_TXT_PATH)

builddir $(PRODUCT_BUILD_DIR): $(PRODUCT_README_PORT_MD_PATH) | $(MKDIR) $(TOUCH)
	$(MKDIR) -p $(PRODUCT_BUILD_DIR)
	$(TOUCH) $(PRODUCT_BUILD_DIR)

include ../Makefile.port

include ../Makefile.portdir

sourcedir $(PRODUCT_SOURCE_DIR): $(PRODUCT_ARCHIVE_PATH) | $(MKDIR) $(CD) $(TAR) $(MV) $(TOUCH)
	$(MKDIR) -p $(SOURCE_DIR)
	$(CD) $(SOURCE_DIR) && $(TAR) xvfJ $(PRODUCT_ARCHIVE_PATH) --force-local
	$(TOUCH) $(PRODUCT_SOURCE_DIR)

include ../Makefile.archive

clean: mostlyclean | $(RM)
	$(RM) -Rf $(PRODUCT_SOURCE_DIR)
	$(RM) -f $(PRODUCT_ARCHIVE_PATH)

mostlyclean: deployclean | $(RM)
	$(RM) -Rf $(PRODUCT_INSTALL_DIR)
	$(RM) -f $(PRODUCT_CONFIGURE_TXT_PATH)
	$(RM) -f $(PRODUCT_BUILD_TXT_PATH)
	$(RM) -Rf $(PRODUCT_BUILD_DIR)
	$(RM) -Rf $(PRODUCT_PORT_DIR)

deployclean: | $(RM) $(RMDIR) $(MKDIR)
	$(RM) -f $(PRODUCT_LIB_FILES_DEPLOY)
	$(RM) -f $(PRODUCT_INCLUDE_FILES_DEPLOY)
	$(MKDIR) -p $(PRODUCT_DEPLOY_LIB_DIR)
	$(RMDIR) --ignore-fail-on-non-empty $(PRODUCT_DEPLOY_LIB_DIR)
	$(MKDIR) -p $(PRODUCT_DEPLOY_INCLUDE_DIR)
	$(RMDIR) --ignore-fail-on-non-empty $(PRODUCT_DEPLOY_INCLUDE_DIR)
	$(MKDIR) -p $(PRODUCT_DEPLOY_DIR)
	$(RMDIR) --ignore-fail-on-non-empty $(PRODUCT_DEPLOY_DIR)

buildclean: | $(CD) $(MAKE)
	$(CD) $(PRODUCT_BUILD_DIR) && $(MAKE) clean

builduninstall: buildclean
	@echo "Target '$@' is not supported by this recipe!"
	@echo "Ordered '$^' instead!"

